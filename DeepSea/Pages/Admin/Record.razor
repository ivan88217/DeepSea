@page "/admin/record"
<h3>出席紀錄</h3>
<label>
	日期
	<select @bind="selectedTime" @onclick="onTimeChange">
		@foreach (var time in recordTimeList)
		{
			<option value="@time">@time</option>
		}
	</select>
</label>
<label>
	添加
	<select @bind="addMid">
		<option value=0>請選擇成員</option>
		@foreach (var member in unCheckedMember)
		{
			<option value="@member.Id">@member.GameName</option>
		}
	</select>
	<button disabled="@(addMid == 0 ? true : false)" class="btn btn-success" @onclick=addMember>新增</button>
</label>
<button disabled="@(selectedTime == "" ? true : false)"  class="btn btn-danger" @onclick=deleteRecord>刪除紀錄</button>
<Table TableItem="AttendanceRecordDetail" Items="attendenceRecord.Details" PageSize="10" ColumnReorder="true">
	<Column TableItem="AttendanceRecordDetail" Title="遊戲名稱" Field="@(x => x.HouseMember.GameName)" Sortable="true" Filterable="true" Width="20%">
		<Template>
			<div style="padding:10px">@context.HouseMember.GameName</div>
		</Template>
	</Column>
	<Column TableItem="AttendanceRecordDetail" Title="操作" Width="10%">
		<Template>
			<button type="button" class="btn btn-link" @onclick="() => unCheck(context)">
				<i class="oi oi-x" />
			</button>
		</Template>
	</Column>
	<Pager ShowPageNumber="true" ShowTotalCount="true" />
</Table>

@code {
	private AttendanceRecord attendenceRecord = new AttendanceRecord();
	private List<string> recordTimeList = new List<string>();
	private string selectedTime = "";
	private int addMid = 0;
	private List<HouseMember> unCheckedMember = new List<HouseMember>();
	private IdentityUserModel user;

	protected override async Task OnInitializedAsync()
	{
		AuthenticationState authState = await AuthenticationStateProvider!.GetAuthenticationStateAsync();
		var userName = authState.User.Identity!.Name;
		user = dbContext.User.Single(u => u.UserName == userName);
		init();
	}

	private void init()
	{
		recordTimeList = dbContext.AttendanceRecord.Where(x => x.AllianceId == user.HouseMember.Detail.AllianceId).Select(x => x.RecordTime).ToList();
		unCheckedMember = new List<HouseMember>();
		addMid = 0;
		selectedTime = "";
	}

	protected void onTimeChange()
	{
		if (selectedTime == "") return;
		addMid = 0;
		attendenceRecord = dbContext.AttendanceRecord.Where(x => x.AllianceId == user.HouseMember.Detail.AllianceId).Single(x => x.RecordTime == selectedTime);
		var checkedMember = attendenceRecord.Details.Select(x => x.HouseMember).ToList();
		var houseMember = dbContext.HouseMember.ToList();
		unCheckedMember = houseMember.Except(checkedMember).ToList();
	}

	protected void unCheck(AttendanceRecordDetail detail)
	{
		var time = detail.AttendenceRecord.RecordTime;
		var name = detail.HouseMember.GameName;
		attendenceRecord.Details.Remove(detail);
		dbContext.AttendanceRecordDetail.Remove(detail);
		dbContext.SaveChanges();
		toastService.ShowWarning($"已自 {time} 刪除 {name}", "刪除成功");
	}

	protected void addMember()
	{
		if (addMid == 0) return;
		attendenceRecord.Details.Add(new AttendanceRecordDetail()
		{
			AttendenceRecordId = attendenceRecord.Id,
			HouseMemberId = addMid
		});
		dbContext.SaveChanges();
		addMid = 0;
		toastService.ShowInfo($"已添加至 {attendenceRecord.RecordTime}", "添加成功");
	}

	protected void deleteRecord()
	{
		if (selectedTime == "") return;
		var time = attendenceRecord.RecordTime;
		dbContext.AttendanceRecord.Remove(attendenceRecord);
		dbContext.SaveChanges();
		init();
		toastService.ShowWarning($"已刪除 {time}", "刪除成功");
	}
}
