@page "/admin/members"


<h3>家族成員名單</h3>
<EditForm Model=addMemberModel OnValidSubmit=addMember style="float:right">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<label>
		名稱:
		<InputText style="width:100%;height:30px;" @bind-Value=addMemberModel.GameName />
	</label>
	<button type="submit" class="btn btn-primary" style="height:30px; line-height:20px;">新增</button>
</EditForm>
<Table TableItem="HouseMember" Items="houseMemberList" PageSize="10" ColumnReorder="true">
	<Column TableItem="HouseMember" Title="遊戲名稱" Field="@(x => x.GameName)" Sortable="true" Filterable="true" Width="20%">
		<Template>
			@if (context.IsEditing)
			{
				<input type="text" class="form-control" placeholder="遊戲名稱" @bind="context.GameName" />
			}
			else
			{
				<div style="padding:10px">@context.GameName</div>
			}
		</Template>
	</Column>
	<Column TableItem="HouseMember" Title="DC名稱" Field="@(x => x.IdentityUser.DiscordName)" Sortable="false" Filterable="true" Width="20%">
		<Template>
			@if (context.IdentityUser != null && context.IsEditing)
			{
				<input type="text" class="form-control" placeholder="DC名稱" @bind="context.IdentityUser.DiscordName" />
			}
			else
			{
				<div style="padding:10px">@(context.IdentityUser != null ? context.IdentityUser.DiscordName : "尚未註冊")</div>
			}
		</Template>
	</Column>
	<Column TableItem="HouseMember" Title="操作" Width="10%">
		<Template>
			@if (context.IsEditing)
			{
				<button type="button" class="btn btn-link" @onclick="() => UpdateMember(context)">
					<i class="oi oi-cloud-upload" />
				</button>
				<button type="button" class="btn btn-link" @onclick="() => EnableEditing(false, context)">
					<i class="oi oi-x" />
				</button>
			}
			else
			{
				<button type="button" class="btn btn-link" @onclick="() => EnableEditing(true, context)">
					<i class="oi oi-pencil" />
				</button>
				<button type="button" class="btn btn-link" @onclick="() => checkDelete(context.Confirm)">
					<i class="oi oi-delete" />
				</button>
				<Confirm @ref="context.Confirm" ConfirmationChanged="(flag) => ConfirmDelete_Click(flag, context)"
					 ConfirmationMessage=@($"確定要刪除 \"{context.GameName}\" 嗎?")>
				</Confirm>
			}
		</Template>
	</Column>
	<Pager ShowPageNumber="true" ShowTotalCount="true" />
</Table>

@code {
	private AddMemberModel addMemberModel = new AddMemberModel();
	private List<HouseMember> houseMemberList = new List<HouseMember>();
	private IdentityUserModel user;

	protected override async Task OnInitializedAsync()
	{
		AuthenticationState authState = await AuthenticationStateProvider!.GetAuthenticationStateAsync();
		var userName = authState.User.Identity!.Name;
		user = dbContext.User.Single(u => u.UserName == userName);
		houseMemberList = dbContext.HouseMember.Where(x => x.Detail.AllianceId == user.HouseMember.Detail.AllianceId).ToList();
	}

	protected void addMember()
	{
		var houseMember = new HouseMember()
		{
			GameName = addMemberModel.GameName,
			CreateTime = DateTime.Now
		};
		dbContext.HouseMember.Add(houseMember);
		dbContext.SaveChanges();
		addMemberModel = new AddMemberModel();
		houseMemberList.Add(houseMember);

		var houseMemberDetail = new HouseMemberDetail()
		{
			HouseMemberId = houseMember.Id,
			AllianceId = user.HouseMember.Detail.AllianceId
		};
		dbContext.HouseMemberDetail.Add(houseMemberDetail);
		dbContext.SaveChanges();
		toastService.ShowSuccess($"成功添加 {addMemberModel.GameName}", "成功");
	}


	protected void EnableEditing(bool flag, HouseMember member)
	{
		member.IsEditing = flag;
	}

	protected void UpdateMember(HouseMember member)
	{
		if(member.IdentityUser != null) member.IdentityUser.UserName = member.GameName;
		dbContext.HouseMember.Update(member);
		dbContext.SaveChanges();
		toastService.ShowInfo($"已更新 {member.GameName}", "成功");

		EnableEditing(false, member);
	}

	protected void checkDelete(Confirm confirm)
	{
		confirm.Show();
	}

	protected void ConfirmDelete_Click(bool deleteConfirmed, HouseMember member)
	{
		if (deleteConfirmed)
		{
			dbContext.HouseMember.Remove(member);
			houseMemberList.Remove(member);
			dbContext.SaveChanges();
			toastService.ShowWarning($"已刪除 {member.GameName}", "成功");
		}
	}
}
